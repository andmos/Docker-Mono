<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Owin</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Owin.Security.AuthenticateResult">
            <summary>
            Acts as the return value from calls to the IAuthenticationManager's AuthenticeAsync methods.
            </summary>
        </member>
        <member name="M:Microsoft.Owin.Security.AuthenticateResult.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Create an instance of the result object
            </summary>
            <param name="identity">Assigned to the Identity property. May be null.</param>
            <param name="extra">Assigned to the Extra property. An empty Extra instance is created if needed.</param>
            <param name="description">Assigned to the Description property. An empty AuthenticationDescription instance is created if needed.</param>
        </member>
        <member name="P:Microsoft.Owin.Security.AuthenticateResult.Identity">
            <summary>
            Contains the claims that were authenticated by the given AuthenticationType. If the authentication
            type was not successful the Identity property will be null.
            </summary>
        </member>
        <member name="P:Microsoft.Owin.Security.AuthenticateResult.Extra">
            <summary>
            Contains extra values that were provided with the original SignIn call.
            </summary>
        </member>
        <member name="P:Microsoft.Owin.Security.AuthenticateResult.Description">
            <summary>
            Contains description properties for the middleware authentication type in general. Does not
            vary per request.
            </summary>
        </member>
        <member name="T:Owin.IntegratedPipelineExtensions">
            <summary>
            Extension methods used to indicate at which stage in the integrated pipeline prior middleware should run.
            </summary>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarker(Owin.IAppBuilder,System.String)">
            <summary>
            Call after other middleware to specify when they should run in the integrated pipeline.
            </summary>
            <param name="app"></param>
            <param name="stageName">The name of the integrated pipeline in which to run.</param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarkerAuthenticate(Owin.IAppBuilder)">
            <summary>
            Call after other middleware to specify that they should run in the Authenticate stage or earlier.
            </summary>
            <param name="app"></param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarkerPostAuthenticate(Owin.IAppBuilder)">
            <summary>
            Call after other middleware to specify that they should run in the PostAuthenticate stage or earlier.
            </summary>
            <param name="app"></param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarkerAuthorize(Owin.IAppBuilder)">
            <summary>
            Call after other middleware to specify that they should run in the Authorize stage or earlier.
            </summary>
            <param name="app"></param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarkerPostAuthorize(Owin.IAppBuilder)">
            <summary>
            Call after other middleware to specify that they should run in the PostAuthorize stage or earlier.
            </summary>
            <param name="app"></param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarkerResolveCache(Owin.IAppBuilder)">
            <summary>
            Call after other middleware to specify that they should run in the ResolveCache stage or earlier.
            </summary>
            <param name="app"></param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarkerPostResolveCache(Owin.IAppBuilder)">
            <summary>
            Call after other middleware to specify that they should run in the PostResolveCache stage or earlier.
            </summary>
            <param name="app"></param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarkerMapHandler(Owin.IAppBuilder)">
            <summary>
            Call after other middleware to specify that they should run in the MapHandler stage or earlier.
            </summary>
            <param name="app"></param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarkerPostMapHandler(Owin.IAppBuilder)">
            <summary>
            Call after other middleware to specify that they should run in the PostMapHandler stage or earlier.
            </summary>
            <param name="app"></param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarkerAcquireState(Owin.IAppBuilder)">
            <summary>
            Call after other middleware to specify that they should run in the AcquireState stage or earlier.
            </summary>
            <param name="app"></param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarkerPostAcquireState(Owin.IAppBuilder)">
            <summary>
            Call after other middleware to specify that they should run in the PostAcquireState stage or earlier.
            </summary>
            <param name="app"></param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Owin.IntegratedPipelineExtensions.UseStageMarkerPreHandlerExecute(Owin.IAppBuilder)">
            <summary>
            Call after other middleware to specify that they should run in the PreHandlerExecute stage or earlier.
            </summary>
            <param name="app"></param>
            <returns>The original IAppBuilder for chaining.</returns>
        </member>
        <member name="M:Microsoft.Owin.Logging.ILogger.WriteCore(System.Diagnostics.TraceEventType,System.Int32,System.Object,System.Exception,System.Func{System.Object,System.Exception,System.String})">
            <summary>
            Aggregates most logging patterns to a single method.  This must be compatible with the Func representation in the OWIN environment.
            
            To check IsEnabled call WriteCore with only TraceEventType and check the return value, no event will be written.
            </summary>
            <param name="eventType"></param>
            <param name="eventId"></param>
            <param name="state"></param>
            <param name="exception"></param>
            <param name="formatter"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Owin.OwinRequest.ReadForm">
            <summary>
            Parse the request body as a form.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Owin.OwinRequest.Authentication">
            <summary>
            Access the Authentication middleware functionality available on the current request.
            </summary>
        </member>
        <member name="M:Owin.AppBuilderExtensions.Run(Owin.IAppBuilder,System.Object)">
            <summary>
            Attach the given application to the pipeline.  Nothing attached after this point will be executed.
            </summary>
            <param name="builder"></param>
            <param name="app"></param>
        </member>
        <member name="M:Owin.AppBuilderExtensions.Build(Owin.IAppBuilder)">
            <summary>
            The Build is called at the point when all of the middleware should be chained
            together. May be called to build pipeline branches.
            </summary>
            <param name="builder"></param>
            <returns>The request processing entry point for this section of the pipeline.</returns>
        </member>
        <member name="M:Owin.AppBuilderExtensions.Build``1(Owin.IAppBuilder)">
            <summary>
            The Build is called at the point when all of the middleware should be chained
            together. May be called to build pipeline branches.
            </summary>
            <typeparam name="TApp">The application signature.</typeparam>
            <param name="builder"></param>
            <returns>The request processing entry point for this section of the pipeline.</returns>
        </member>
        <member name="M:Owin.AppBuilderExtensions.BuildNew``1(Owin.IAppBuilder,System.Action{Owin.IAppBuilder})">
            <summary>
            Creates a new IAppBuilder instance from the current one and then invokes the configuration callback.
            </summary>
            <typeparam name="TApp">The application signature.</typeparam>
            <param name="builder"></param>
            <param name="configuration">The callback for configuration.</param>
            <returns>The request processing entry point for this section of the pipeline.</returns>
        </member>
        <member name="M:Owin.AppBuilderExtensions.AddSignatureConversion(Owin.IAppBuilder,System.Delegate)">
            <summary>
            Adds converters for adapting between disparate application signatures.
            </summary>
            <param name="builder"></param>
            <param name="conversion"></param>
        </member>
        <member name="M:Owin.AppBuilderExtensions.UseFunc``1(Owin.IAppBuilder,System.Func{``0,``0})">
            <summary>
            Specifies a middleware instance generator of the given type.
            </summary>
            <typeparam name="TApp">The application signature.</typeparam>
            <param name="builder"></param>
            <param name="middleware">A Func that generates a middleware instance given a reference to the next middleware.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Owin.Security.IAuthenticationManager">
            <summary>
            Used to interact with authentication middleware that have been chained in the pipeline
            </summary>
        </member>
        <member name="M:Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes">
            <summary>
            Lists all of the description data provided by authentication middleware that have been chained
            </summary>
            <returns>The authentication descriptions</returns>
        </member>
        <member name="M:Microsoft.Owin.Security.IAuthenticationManager.GetAuthenticationTypes(System.Func{Microsoft.Owin.Security.AuthenticationDescription,System.Boolean})">
            <summary>
            Lists the description data of all of the authentication middleware which are true for a given predicate
            </summary>
            <param name="predicate">A function provided by the caller which returns true for descriptions that should be in the returned list</param>
            <returns>The authentication descriptions</returns>
        </member>
        <member name="M:Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String)">
            <summary>
            Call back through the middleware to ask for a specific form of authentication to be performed
            on the current request
            </summary>
            <param name="authenticationType">Identifies which middleware should respond to the request
            for authentication. This value is compared to the middleware's Options.AuthenticationType property.</param>
            <returns>Returns an object with the results of the authentication. The AuthenticationResult.Identity
            may be null if authentication failed. Even if the Identity property is null, there may still be 
            AuthenticationResult.Extra and AuthenticationResult.Description information returned.</returns>
        </member>
        <member name="M:Microsoft.Owin.Security.IAuthenticationManager.AuthenticateAsync(System.String[])">
            <summary>
            Called to perform any number of authentication mechanisms on the current request.
            </summary>
            <param name="authenticationTypes">Identifies one or more middleware which should attempt to respond</param>
            <returns>Returns the AuthenticationResult information from the middleware which responded. The 
            order is determined by the order the middleware are in the pipeline. Latest added is first in the list.</returns>
        </member>
        <member name="M:Microsoft.Owin.Security.IAuthenticationManager.Challenge(Microsoft.Owin.Security.AuthenticationExtra,System.String[])">
            <summary>
            Add information into the response environment that will cause the authentication middleware to challenge
            the caller to authenticate. This also changes the status code of the response to 401. The nature of that 
            challenge varies greatly, and ranges from adding a response header or changing the 401 status code to 
            a 302 redirect.
            </summary>
            <param name="authenticationTypes">Identify which middleware should perform their alterations on the
            response. If the authenticationTypes is null or empty, that means the 
            AuthenticationMode.Active middleware should perform their alterations on the response.</param>
            <param name="extra">Additional arbitraty values which may be used by particular authentication types.</param>
        </member>
        <member name="M:Microsoft.Owin.Security.IAuthenticationManager.SignIn(Microsoft.Owin.Security.AuthenticationExtra,System.Security.Claims.ClaimsIdentity[])">
            <summary>
            Add information to the response environment that will cause the appropriate authentication middleware
            to grant a claims-based identity to the recipient of the response. The exact mechanism of this may vary.
            Examples include setting a cookie, to adding a fragment on the redirect url, or producing an OAuth2
            access code or token response.
            </summary>
            <param name="user">Determines which claims are granted to the signed in user. The 
            ClaimsIdentity.AuthenticationType property is compared to the middleware's Options.AuthenticationType 
            value to determins which claims are granted by which middleware. The recommended use is to have a single
            ClaimsIdentity which has the AuthenticationType matching a specific middleware.</param>
            <param name="extra">Contains additional properties the middleware are expected to persist along with
            the claims. These values will be returned as the AuthenticateResult.Extra collection when AuthenticateAsync
            is called on subsequent requests.</param>
        </member>
        <member name="M:Microsoft.Owin.Security.IAuthenticationManager.SignOut(System.String[])">
            <summary>
            Add information to the response environment that will cause the appropriate authentication middleware
            to revoke any claims identity associated the the caller. The exact method varies.
            </summary>
            <param name="authenticationTypes">Identifies which middleware should perform the work to sign out.
            Multiple authentication types may be provided to clear out more than one cookie at a time, or to clear
            cookies and redirect to an external single-sign out url.</param>
        </member>
        <member name="P:Microsoft.Owin.Security.IAuthenticationManager.User">
            <summary>
            Returns the current user for the request
            </summary>
        </member>
    </members>
</doc>
